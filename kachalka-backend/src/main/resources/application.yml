spring:
  application:
    name: kachalka-backend
  r2dbc:
    url: r2dbc:postgresql://kachalka-postgresql:5432/kachalka
#    url: r2dbc:postgresql://localhost:5433/kachalka
    username: kachalka
    password: kachalka
  security:
    oauth2:
      resourceserver:
        jwt:
#          issuer-uri: http://localhost:1337/realms/Kachalka
                issuer-uri: http://keycloak:8080/realms/Kachalka
      client:
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/Kachalka
#            issuer-uri: http://localhost:1337/realms/Kachalka
        registration:
          keycloak:
            client-id: kachalka-backend-security
            client-secret: JxuNp5G5AechhXI1eNK3S6A4qjOxUnDb
            scope: openid
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#    bootstrap-servers: localhost:29092
    bootstrap-servers: kafka:29093

listener:
  certificate-bought-topic: kachalka-user-certificate-bought-event

server:
  port: 8080

rsa:
  key-path: "certs/key-tg6LK8DqJ0yR8PlZUABTLZZwIC-NKb6jB4tICAaU83I-private.json"

security:
  permissions:
    ADMIN:
      - EDIT_CERTIFICATES
      - GRANT_MODERATOR_PERMISSIONS
    MODERATOR:
      - EDIT_CERTIFICATES
    USER:
      - BUY_CERTIFICATES

logging:
  level:
    org:
      springframework:
        security: DEBUG